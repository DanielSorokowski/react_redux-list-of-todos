{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","query","status","initState","filterReducer","todos","todosReducer","filter","tod","id","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","visibleTodos","useMemo","preparedTodos","lowerQuery","toLowerCase","title","includes","completed","Error","getVisibleTodos","todosElements","map","isCurrent","className","onClick","length","TodoFilter","handleSelect","useCallback","event","value","target","handleInput","handleClearQuery","onSubmit","preventDefault","onChange","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","isLoading","setIsLoading","hasError","setHasError","useEffect","userId","result","catch","finally","href","email","name","App","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e72df5d1.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ninterface SetQueryActions {\n  type: 'filter/SET_QUERY',\n  payload: string\n}\ninterface RemoveQueryActions {\n  type: 'filter/REMOVE_QUERY'\n}\ninterface SetStatusActions {\n  type: 'filter/SET_STATUS',\n  payload: Status\n}\n\ntype Action = SetQueryActions | RemoveQueryActions | SetStatusActions;\n\nconst setQuery = (query: string): SetQueryActions => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\n\nconst removeQuery = (): RemoveQueryActions => ({\n  type: 'filter/REMOVE_QUERY',\n});\n\nconst setStatus = (status: Status): SetStatusActions => ({\n  type: 'filter/SET_STATUS',\n  payload: status,\n});\n\nexport const actions = { setQuery, removeQuery, setStatus };\n\ninterface State {\n  query: string,\n  status: Status,\n}\n\nconst initState: State = { query: '', status: 'all' };\n\nconst filterReducer = (state = initState, action: Action): State => {\n  switch (action.type) {\n    case 'filter/REMOVE_QUERY':\n      return { ...state, query: '' };\n    case 'filter/SET_QUERY':\n      return { ...state, query: action.payload };\n    case 'filter/SET_STATUS':\n      return { ...state, status: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ninterface SetTodosAction {\n  type: 'todos/SET',\n  payload: Todo[],\n}\n\ninterface AddTodosAction {\n  type: 'todos/ADD',\n  payload: Todo,\n}\n\ninterface RemoveTodosAction {\n  type: 'todos/REMOVE',\n  payload: Todo,\n}\n\ntype Action = SetTodosAction | AddTodosAction | RemoveTodosAction;\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nconst addTodo = (todo: Todo): AddTodosAction => ({\n  type: 'todos/ADD',\n  payload: todo,\n});\n\nconst removeTodo = (todo: Todo): RemoveTodosAction => ({\n  type: 'todos/REMOVE',\n  payload: todo,\n});\n\nexport const actions = { setTodos, addTodo, removeTodo };\n\ntype State = Todo[];\n\nconst todosReducer = (state: State = [], action: Action): State => {\n  switch (action.type) {\n    case 'todos/SET':\n      return [...action.payload];\n    case 'todos/ADD':\n      return [...state, action.payload];\n    case 'todos/REMOVE':\n      return state.filter(tod => tod.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React, { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { Status } from '../../types/Status';\nimport { Todo } from '../../types/Todo';\nimport { actions } from '../../features/currentTodo';\n\nexport const getVisibleTodos = (\n  todos: Todo[],\n  status: Status,\n  query: string,\n) => {\n  let preparedTodos = [...todos];\n\n  if (query) {\n    const lowerQuery = query.toLowerCase();\n\n    preparedTodos = preparedTodos\n      .filter(todo => todo.title.toLowerCase().includes(lowerQuery));\n  }\n\n  preparedTodos = preparedTodos.filter(todo => {\n    switch (status) {\n      case 'all':\n        return true;\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        throw new Error('Filter type is incorrect');\n    }\n  });\n\n  return preparedTodos;\n};\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const { query, status } = useAppSelector(state => state.filter);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useDispatch();\n\n  const visibleTodos = useMemo(\n    () => getVisibleTodos(todos, status, query),\n    [todos, query, status],\n  );\n\n  const todosElements = visibleTodos.map(todo => {\n    const { id, title, completed } = todo;\n    const isCurrent = currentTodo?.id === todo.id;\n\n    return (\n      <tr data-cy=\"todo\" key={id}>\n        <td className=\"is-vcentered\">{id}</td>\n        <td className=\"is-vcentered\">\n          {completed && (\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          )}\n        </td>\n\n        <td className=\"is-vcentered is-expanded\">\n          <p className={!completed ? 'has-text-danger' : 'has-text-success'}>\n            {title}\n          </p>\n        </td>\n\n        <td className=\"has-text-right is-vcentered\">\n          <button\n            data-cy=\"selectButton\"\n            className=\"button\"\n            type=\"button\"\n            onClick={() => dispatch(actions.setTodo(todo))}\n          >\n            <span className=\"icon\">\n              <i className={`far ${!isCurrent ? 'fa-eye' : 'fa-eye-slash'}`} />\n            </span>\n          </button>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <>\n      {!visibleTodos.length ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todosElements}\n          </tbody>\n        </table>\n      )}\n\n    </>\n  );\n};\n","import React, { ChangeEvent, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const { query, status } = useAppSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const handleSelect = useCallback(\n    (event: ChangeEvent<HTMLSelectElement>) => {\n      const value = event.target.value as Status;\n\n      dispatch(actions.setStatus(value));\n    },\n    [],\n  );\n\n  const handleInput = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      dispatch(actions.setQuery(event.target.value));\n    },\n    [],\n  );\n\n  const handleClearQuery = useCallback(() => {\n    dispatch(actions.removeQuery());\n  }, []);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {!!query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Loader } from '../Loader';\nimport { useAppSelector } from '../../app/hooks';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { actions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const todo = useAppSelector(state => state.currentTodo);\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (todo) {\n      getUser(todo.userId).then(result => {\n        setUser(result);\n      }).catch(() => {\n        setHasError(true);\n      }).finally(() => {\n        setIsLoading(false);\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo?.id}`}\n              </div>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => dispatch(actions.removeTodo())}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              {hasError ? (\n                <strong className=\"has-text-danger\">\n                  Unable to load the user\n                </strong>\n              ) : (\n                <>\n                  <p className=\"block\" data-cy=\"modal-title\">{todo?.title}</p>\n                  <p className=\"block\" data-cy=\"modal-user\">\n                    {todo?.completed\n                      ? (<strong className=\"has-text-success\">Done</strong>)\n                      : (<strong className=\"has-text-danger\">Planned</strong>)}\n                    {' by '}\n                    <a href={`mailto:${user?.email}`}>\n                      {user?.name}\n                    </a>\n                  </p>\n                </>\n              )}\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos().then(result => {\n      dispatch(actions.setTodos(result));\n    }).catch(() => {\n      setHasError(true);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n\n              {hasError ? (\n                <p className=\"notification is-danger\">\n                  Unable to load todos\n                </p>\n              ) : (\n                <TodoList />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {!!currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}